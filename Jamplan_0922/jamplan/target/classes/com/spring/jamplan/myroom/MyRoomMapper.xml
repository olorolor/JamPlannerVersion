<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.jamplan.myroom.MyRoomMapper">
	
	<resultMap type="com.spring.jamplan.model.UserVO" id="userResultMap">
		<result property="id" column="id" />
		<result property="email" column="email" />
		<result property="pass" column="pass" />
		<result property="nation" column="nation" />
		<result property="gender" column="gender" />
		<result property="travelType" column="travelType" />
		<result property="hobby" column="hobby" />
		<result property="image" column="image" />
		<result property="age" column="age" />
		<result property="isAdmin" column="isAdmin" />
		<result property="signDate" column="signDate" />
	</resultMap>
	
	<resultMap type="com.spring.jamplan.model.TeamInfoVO" id="teamInfoResultMap">
		<result property="teamNo" column="teamNo" />
		<result property="teamName" column="teamName" />
		<result property="id" column="id" />
		<result property="role" column="role" />
		<result property="planNo" column="planNo" />
		<result property="planName" column="planName" />
		<result property="joinDate" column="joinDate" />
	</resultMap>
	
	<resultMap type="com.spring.jamplan.model.CalendarVO" id="calendarResultMap">
		<result property="planNo" column="planNo" />
		<result property="selectDate" column="selectDate" />
		<result property="dateCount" column="dateCount" />
		<result property="confirmIndicator" column="confirmIndicator" />
		<result property="id" column="id" />
	</resultMap>
	
	<resultMap type="com.spring.jamplan.model.PlanVO" id="planResultMap">
		<result property="planNo" column="planNo" />
		<result property="teamNo" column="teamNo" />
		<result property="goodCount" column="goodCount" />
		<result property="readCount" column="readCount" />
		<result property="isOpen" column="isOpen" />
		<result property="planName" column="planName" />
		<result property="hashTag" column="hashTag" />
		<result property="planDate" column="planDate" />
		<result property="image" column="image"/>
	</resultMap>
	
	<resultMap type="com.spring.jamplan.model.MessageVO" id="messageResultMap">
		<result property="sender" column="sender" />
		<result property="receiver" column="receiver" />
		<result property="isRead" column="isRead" />
		<result property="teamName" column="teamName" />
	</resultMap>
	
	<resultMap type="com.spring.jamplan.model.PlanUpdateVO" id="planUpdateResultMap">
		<result property="planNo" column="planNo" />
		<result property="confirmIndicator" column="confirmIndicator" />
		<result property="dateCheck" column="dateCheck" />
	</resultMap>
	
	<insert id="insertToMember" parameterType= "com.spring.jamplan.model.TeamInfoVO" >
		insert into teaminfo (id, planName, planNo, role, teamName, teamNo, joinDate) 
		values ( #{id}, #{planName, jdbcType=VARCHAR}, #{planNo, jdbcType=VARCHAR}, #{role}, #{teamName}, #{teamNo}, sysdate)
	</insert>
	
	<update id = "updateMessage" parameterType= "com.spring.jamplan.model.MessageVO" >
		update message set isRead = #{isRead} where receiver = #{receiver}
	</update>
	
	<select id="getMessageListById"  parameterType = "com.spring.jamplan.model.MessageVO" resultMap="messageResultMap">
		select * from message where receiver = #{receiver, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertApplyMessage" parameterType = "com.spring.jamplan.model.MessageVO" >
		insert into message (sender, receiver, isRead, teamName) values(#{sender},#{receiver},#{isRead},#{teamName})
	</insert>
	
	<select id ="checkApplyMessage" parameterType = "com.spring.jamplan.model.MessageVO" resultMap="messageResultMap">
		select * from message where teamName =#{teamName} and sender = #{sender}
	</select>
	
	<select id ="getTeamReceiver" parameterType = "com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap">
		select * from teaminfo where teamName = #{teamName} and role = #{role}
	</select>
	
	<delete id="deleteCansleMessage" parameterType = "com.spring.jamplan.model.MessageVO">
		delete from message where sender = #{sender} and teamName = #{teamName}
	</delete>
	
	<select id = "getRole" parameterType = "com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap">
		select * from teaminfo where planNo = #{planNo} and id = #{id}
	</select>
	
	<select id = "getTeamInfo" parameterType="com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap">
		select * from teaminfo where id = #{id} and  teamName = #{teamName,  javaType = String}
	</select>
	
	<select id = "getTeamMemberList" parameterType="com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap">
		select * from teaminfo where teamName = #{teamName,  javaType = String}
	</select>
	
	<select id = "getMaxPlanNo" resultType="int">
		SELECT NVL(MAX(planNo),0) as planNo FROM teaminfo 
	</select>
	
	<delete id = "deleteNullPlan" parameterType="String">
		delete from teaminfo where teamName = #{teamName, javaType = String} and planName is null
	</delete>
	
	<select id="getTeamList" parameterType="String" resultMap="teamInfoResultMap">
		SELECT * FROM teaminfo WHERE ID=#{id, jdbcType=VARCHAR} ORDER BY TEAMNAME
	</select>
	
	<select id="getTeamMember" parameterType="com.spring.jamplan.model.UserVO" resultMap="teamInfoResultMap">
		SELECT ID FROM teaminfo WHERE TEAMNO IN (SELECT DISTINCT TEAMNO FROM teaminfo WHERE ID=#{id, jdbcType=VARCHAR})
	</select>
	
	<select id="getPlanList" parameterType="com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap">
		SELECT * FROM TeamInfo WHERE TEAMNAME = #{teamName, jdbcType=VARCHAR}
	
		<if test="id != null">
			AND ID = #{id, jdbcType=VARCHAR }
		</if>	
	</select>
	
	<select id="checkUpdate" parameterType="com.spring.jamplan.model.UserVO" resultMap="planUpdateResultMap">
		SELECT * FROM (SELECT * FROM PLANUPDATE WHERE PLANNO IN (SELECT PLANNO FROM TEAMINFO WHERE ID=#{id, jdbcType=VARCHAR }) ORDER BY DATECHECK DESC) WHERE ROWNUM <![CDATA[<=]]> 10
	</select>
	
	<select id="getUserInfo" parameterType="com.spring.jamplan.model.UserVO" resultMap="userResultMap" >
		SELECT * FROM USERINFO2 WHERE ID={id, jdbcType=VARCHAR }
	</select>
	
	<select id="getMessageList" parameterType="String" resultMap="messageResultMap">
		SELECT * FROM (SELECT * FROM MESSAGE WHERE RECEIVER=#{receiver, jdbcType=VARCHAR }) 
			WHERE ISREAD = 0
	</select> 
	
	<select id="searchTeam" parameterType="com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap" >
		SELECT * FROM TEAMINFO WHERE TEAMNAME LIKE '%'||#{teamName, jdbcType=VARCHAR}||'%'
		
	</select>
	
	<select id="searchPlan" parameterType="com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap" >
		SELECT * FROM teaminfo WHERE PLANNO=#{planNo, jdbcType=INTEGER }
	</select>
	
	<insert id="makeTeam" parameterType="com.spring.jamplan.model.TeamInfoVO"  >
		insert into teamInfo (teamNo,teamName,id, role, JOINDATE) VALUES(TEAMINFO_SEQ.NEXTVAL, #{teamName, javaType=String}, #{id, javaType=String}, 0, SYSDATE)
	</insert>
	<insert id = "insertPlan"  parameterType="com.spring.jamplan.model.TeamInfoVO" >
		insert into teamInfo (teamNo,teamName,id,role,planNo,planName) values (#{teamNo},#{teamName},#{id},#{role},#{planNo},#{planName})
	</insert>
<!-- 	
	<insert id="makePlan" parameterType="com.spring.jamplan.model.PlanVO"  >
		INSERT INTO PLAN(PLANNO, TEAMNO, PLANNAME, PLANDATE, ISOPEN)
			VALUES(#{PLAN_SEQ.NEXTVAL}, #{teamNo}, #{planName, jdbcType=VARCHAR}, SYSDATE, #{isOpen})
	</insert>
	 -->
	
	<select id="validationTeamName" parameterType="com.spring.jamplan.model.TeamInfoVO" resultMap="teamInfoResultMap" >
		SELECT * FROM TEAMINFO WHERE TEAMNAME=#{teamName, jdbcType=VARCHAR }
	</select>
	
	<delete id="deleteTeam" parameterType="com.spring.jamplan.model.TeamInfoVO" >
		DELETE FROM TEAMINFO WHERE TEAMNAME=#{teamName, jdbcType=VARCHAR}
	</delete>
	
	<delete id="deletePlan" parameterType="com.spring.jamplan.model.PlanVO"  >
		DELETE FROM PLAN WHERE PLANNO=#{planNo}
	</delete>
	
</mapper>